{"version":3,"sources":["webpack:///./index.js"],"names":["refsLocal","hr","document","querySelector","mn","sc","refsNewYork","refsLondon","refsTokio","refsForm","form","start","stop","inputs","querySelectorAll","refsTimer","day","hour","mins","secs","setInterval","currentTime","Date","hh","getHours","mm","getMinutes","ss","getSeconds","style","transform","date","timer","onTick","this","time","intervalId","isTimerActive","init","prestart","getTimeComponents","month","year","hours","minutes","seconds","сurrentUserTime","getTime","targetTime","now","differenceTime","Math","sign","classList","add","clearInterval","t","days_","pad","floor","hours_","mins_","secs_","value","String","padStart","textContent","addEventListener","e","preventDefault","remove","min","Number","target","max","maxLength","slice","name","bind"],"mappings":"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","file":"main.8d182389f81f20d592a5.js","sourcesContent":["import './styles.css'\n\nconst refsLocal = {\n    hr: document.querySelector('.local-time #hr'),\n    mn: document.querySelector('.local-time #mn'),\n    sc: document.querySelector('.local-time #sc'),\n    \n}\n\nconst refsNewYork = {\n    hr: document.querySelector('.new-yourk-time #hr'),\n    mn: document.querySelector('.new-yourk-time #mn'),\n    sc: document.querySelector('.new-yourk-time #sc'),\n}\n\nconst refsLondon = {\n    hr: document.querySelector('.london-time #hr'),\n    mn: document.querySelector('.london-time #mn'),\n    sc: document.querySelector('.london-time #sc'),\n}\n\nconst refsTokio = {\n    hr: document.querySelector('.tokio-time #hr'),\n    mn: document.querySelector('.tokio-time #mn'),\n    sc: document.querySelector('.tokio-time #sc'), \n}\n\nconst refsForm = {\n    form: document.querySelector('.form'),\n    start: document.querySelector('[data-action-start]'),\n    stop: document.querySelector('[data-action-stop]'),\n    inputs: document.querySelectorAll('.form input'),\n}  \n\nconst refsTimer = {\n    day: document.querySelector('[data-value=\"days\"]'),\n    hour: document.querySelector('[data-value=\"hours\"]'),\n    mins: document.querySelector('[data-value=\"mins\"]'),\n    secs: document.querySelector('[data-value=\"secs\"]'),\n}\n\n//-------------------------------------------------------------->\n\nconst DEG = 6; //360 / 60 \n\n// local time\nsetInterval(() => {\n    const currentTime = new Date(); \n    \n    const hh = currentTime.getHours() * 30; //12 * 30 = 360\n    const mm = currentTime.getMinutes() * DEG;\n    const ss = currentTime.getSeconds() * DEG;\n\n    refsLocal.hr.style.transform = `rotateZ(${(hh) + (mm / 12)}deg)`;\n    refsLocal.mn.style.transform = `rotateZ(${(mm)}deg)`;\n    refsLocal.sc.style.transform = `rotateZ(${(ss)}deg)`;\n}, 1000)\n\n// New-york\nsetInterval(() => {\n    let currentTime = new Date(); \n\n    const hh = currentTime.getHours() * 30 - 180; //12 * 30 = 360\n    const mm = currentTime.getMinutes() * DEG;\n    const ss = currentTime.getSeconds() * DEG;\n\n    refsNewYork.hr.style.transform = `rotateZ(${(hh) + (mm / 12)}deg)`;\n    refsNewYork.mn.style.transform = `rotateZ(${(mm)}deg)`;\n    refsNewYork.sc.style.transform = `rotateZ(${(ss)}deg)`;\n}, 1000)\n \n// London\nsetInterval(() => {\n    let currentTime = new Date(); \n\n    const hh = currentTime.getHours() * 30 - 60; //12 * 30 = 360\n    const mm = currentTime.getMinutes() * DEG;\n    const ss = currentTime.getSeconds() * DEG;\n\n    refsLondon.hr.style.transform = `rotateZ(${(hh) + (mm / 12)}deg)`;\n    refsLondon.mn.style.transform = `rotateZ(${(mm)}deg)`;\n    refsLondon.sc.style.transform = `rotateZ(${(ss)}deg)`;\n}, 1000)\n\n// Tokio\nsetInterval(() => {\n    let currentTime = new Date(); \n \n    const hh = currentTime.getHours() * 30 + 210; //12 * 30 = 360\n    const mm = currentTime.getMinutes() * DEG;\n    const ss = currentTime.getSeconds() * DEG;\n\n    refsTokio.hr.style.transform = `rotateZ(${(hh) + (mm / 12)}deg)`;\n    refsTokio.mn.style.transform = `rotateZ(${(mm)}deg)`;\n    refsTokio.sc.style.transform = `rotateZ(${(ss)}deg)`;\n\n\n}, 1000)\n\n\n\n\n//-------------------------------------------------------------->\n\nfunction onGetFormValue(e) {\n    e.preventDefault();\n    refsForm.form.classList.remove('invalid');\n\n\n    const min = Number(e.target.min);\n    const max = Number(e.target.max);\n    let value = Number(e.target.value);\n    const maxLength = Number(e.target.maxLength);\n    \n    if (value > maxLength) {\n        e.target.value = e.target.value.slice(0, maxLength);\n        value = e.target.value;\n    }\n\n    if(e.target.name === 'month'){\n       \n        if (value >= min && value <= max) {\n        \n            date[e.target.name] = value - 1;\n            return;\n        };\n        return;\n      \n    } else {\n        date[e.target.name] = value;    \n    };\n};\n\nconst date = {};\n\nclass Timer {\n    constructor({ onTick }, date) {\n        this.time = date;\n\n        this.intervalId = null;\n        this.isTimerActive = false;\n        this.onTick = onTick;\n        this.init();\n    }\n    prestart() {\n        this.start(this.time)\n    }\n\n    init() {\n        const time = this.getTimeComponents(0); //??? 2:13:60\n        this.onTick(time); //???\n    }\n\n    start({ day = 31, month = 11, year = 2020, hours = 23, minutes = 59, seconds = 59 }) {\n        if (this.isTimerActive) {\n            return;\n        };\n        \n        const сurrentUserTime = new Date(year, month, day, hours, minutes, seconds).getTime();\n\n        this.isTimerActive = true;\n\n        this.intervalId = setInterval(() => {\n            const targetTime = Date.now();\n            const differenceTime = сurrentUserTime - targetTime;\n            \n            if (Math.sign(differenceTime) === -1 || 0) {\n                refsForm.form.classList.add('invalid');\n                this.stop()\n                return;\n            }\n\n            const time = this.getTimeComponents(differenceTime);\n\n            this.onTick(time);\n\n        }, 1000);\n    };\n    stop() {\n        clearInterval(this.intervalId);\n        this.isTimerActive = false;\n\n        this.init();\n        \n    };\n    getTimeComponents(t) {\n        const days_ = this.pad(Math.floor(t / (1000 * 60 * 60 * 24)));\n        const hours_ = this.pad(Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins_ = this.pad(Math.floor((t % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs_ = this.pad(Math.floor((t % (1000 * 60)) / 1000));\n\n        return {days_, hours_, mins_, secs_}\n    };\n       pad(value) {\n        return String(value).padStart(2, '0');\n    };\n}\n\nconst timer = new Timer({onTick: updateClockface}, date);\n\n\nfunction updateClockface({days_, hours_, mins_, secs_}) {    \n    refsTimer.day.textContent = days_;\n    refsTimer.hour.textContent = hours_;\n    refsTimer.mins.textContent = mins_;\n    refsTimer.secs.textContent = secs_;\n}\n\n\n\nrefsForm.form.addEventListener('input', onGetFormValue);\nrefsForm.start.addEventListener('click', timer.prestart.bind(timer));\nrefsForm.stop.addEventListener('click', timer.stop.bind(timer));\n\n"],"sourceRoot":""}